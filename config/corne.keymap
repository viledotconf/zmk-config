/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "tap-preferred"; };

/ {
    keymap {
        compatible = "zmk,keymap";

        Main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC  &kp SQT           &kp COMMA       &kp DOT             &kp P               &kp Y          &kp F          &kp G                &kp C                &kp R            &kp L             &kp QUESTION
&kp TAB  &mt LEFT_SHIFT A  &mt LEFT_ALT O  &mt LEFT_CONTROL E  &mt LEFT_COMMAND U  &kp I          &kp D          &mt RIGHT_COMMAND H  &mt RIGHT_CONTROL T  &mt RIGHT_ALT N  &mt LEFT_SHIFT S  &kp MINUS
&mo 3    &kp SEMI          &kp Q           &kp J               &kp K               &kp X          &kp B          &kp M                &kp W                &kp V            &kp Z             &kp RIGHT_ALT
                                           &mo 5               &mo 1               &lt 4 SPACE    &kp BACKSPACE  &mo 2                &kp ESC
            >;
        };

        S1 {
            bindings = <
&none           &none      &kp AT    &kp HASH  &kp PERCENT    &none    &none          &kp PLUS       &kp ASTERISK   &kp MINUS  &kp EQUAL  &none
&kp LEFT_SHIFT  &kp GRAVE  &kp PIPE  &kp EXCL  &kp AMPERSAND  &none    &none          &kp DOLLAR     &kp SLASH      &kp TILDE  &kp CARET  &kp RSHIFT
&none           &none      &none     &none     &none          &none    &none          &kp QUESTION   &kp BACKSLASH  &kp UNDER  &none      &none
                                     &none     &none          &none    &kp BACKSPACE  &kp RIGHT_ALT  &none
            >;
        };

        Numpad {
            bindings = <
&kp KP_NUMLOCK  &none  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none         &none          &kp KP_PLUS                  &kp KP_MINUS              &kp LS(KP_ASTERISK)  &kp KP_SLASH     &to 0
&none           &none  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none         &none          &kp RIGHT_GUI                &kp RIGHT_CONTROL         &kp RIGHT_ALT        &kp RIGHT_SHIFT  &none
&none           &none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &none          &kp RA(KP_LEFT_PARENTHESIS)  &kp KP_RIGHT_PARENTHESIS  &none                &none            &to 2
                                        &none            &kp KP_NUMBER_0  &kp ENTER     &kp BACKSPACE  &kp RA(KP_MINUS)             &trans
            >;
        };

        Media {
            bindings = <
&none   &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none  &ext_power EP_ON     &none  &none  &none  &none  &none  &none
&none   &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &none  &none                &none  &none  &none  &none  &none  &none
&trans  &none       &bt BT_PRV            &bt BT_NXT            &none  &ext_power EP_OFF    &none  &none  &none  &none  &none  &none
                                          &bt BT_CLR            &none  &none                &none  &none  &none
            >;
        };

        Movement {
            bindings = <
&kp CAPSLOCK  &none      &none      &none     &none     &none         &none          &kp PLUS   &none          &kp MINUS    &none      &none
&none         &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none         &kp BACKSPACE  &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &none
&none         &none      &none      &none     &none     &kp DELETE    &none          &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
                                    &none     &none     &none         &kp ENTER      &kp SPACE  &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
